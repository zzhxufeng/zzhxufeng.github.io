{"meta":{"title":"Blog","subtitle":"","description":"","author":"zzhxufeng","url":"https://zzhxufeng.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2021-12-22T07:57:02.676Z","updated":"2021-12-22T07:50:49.295Z","comments":false,"path":"/404.html","permalink":"https://zzhxufeng.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2021-12-22T07:57:02.680Z","updated":"2021-12-22T07:50:49.295Z","comments":false,"path":"about/index.html","permalink":"https://zzhxufeng.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2021-12-22T07:57:02.680Z","updated":"2021-12-22T07:50:49.295Z","comments":false,"path":"books/index.html","permalink":"https://zzhxufeng.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-12-22T07:57:02.680Z","updated":"2021-12-22T07:50:49.295Z","comments":false,"path":"categories/index.html","permalink":"https://zzhxufeng.github.io/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2021-12-22T07:57:02.680Z","updated":"2021-12-22T07:50:49.295Z","comments":false,"path":"repository/index.html","permalink":"https://zzhxufeng.github.io/repository/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-12-22T07:57:02.680Z","updated":"2021-12-22T07:50:49.295Z","comments":true,"path":"links/index.html","permalink":"https://zzhxufeng.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-12-22T07:57:02.680Z","updated":"2021-12-22T07:50:49.295Z","comments":false,"path":"tags/index.html","permalink":"https://zzhxufeng.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"intellij插件","slug":"intellij插件","date":"2022-02-04T01:56:56.000Z","updated":"2022-02-04T01:58:33.393Z","comments":true,"path":"2022/02/04/intellij插件/","link":"","permalink":"https://zzhxufeng.github.io/2022/02/04/intellij%E6%8F%92%E4%BB%B6/","excerpt":"","text":"遇到的问题 导入 plugins &#39;android&#39; 后gradle构建报错：IDEA回退到旧版本即可。","categories":[],"tags":[{"name":"Tools","slug":"Tools","permalink":"https://zzhxufeng.github.io/tags/Tools/"}]},{"title":"AOSP build, flash","slug":"AOSP-build-flash","date":"2022-01-10T13:30:31.000Z","updated":"2022-01-11T12:57:06.959Z","comments":true,"path":"2022/01/10/AOSP-build-flash/","link":"","permalink":"https://zzhxufeng.github.io/2022/01/10/AOSP-build-flash/","excerpt":"","text":"前提 Pixel4 frame Ubuntu18.04, SSD 500GB, RAM 32GB AOSP build env 下载驱动及AOSP驱动和AOSP的build ID要对应。 Driver Binaries for Nexus and Pixel Devices 下载源代码 准备驱动及编译AOSP 将驱动脚本解压到AOSP源码根目录下 执行两个驱动脚本 编译AOSP， pixel4 aosp_flame-userdebug 烧写 export ANDROID_PRODUCT_OUT=out/target/product/flame adb reboot bootloader fastboot flashall -w （wipes /data) fastboot reboot 参考 Flashing Devices | Android Open Source Project AOSP 编译和烧写","categories":[],"tags":[{"name":"AOSP","slug":"AOSP","permalink":"https://zzhxufeng.github.io/tags/AOSP/"}]},{"title":"虚拟机组成","slug":"虚拟机组成","date":"2022-01-05T14:07:38.000Z","updated":"2022-01-05T14:27:48.598Z","comments":true,"path":"2022/01/05/虚拟机组成/","link":"","permalink":"https://zzhxufeng.github.io/2022/01/05/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BB%84%E6%88%90/","excerpt":"","text":"加载器与动态链接器：把应用程序代码加载到内存中，并把符号解析到内部地址 执行引擎：执行程序操作 内存管理器：管理各种内存资源 线程调度器：管理计算资源 本地接口：为该语言不能直接访问的外部资源提供访问方式 传统模型与虚拟机模型","categories":[],"tags":[{"name":"JVM","slug":"JVM","permalink":"https://zzhxufeng.github.io/tags/JVM/"}]},{"title":"同步","slug":"同步","date":"2022-01-03T12:25:15.000Z","updated":"2022-01-06T13:38:50.596Z","comments":true,"path":"2022/01/03/同步/","link":"","permalink":"https://zzhxufeng.github.io/2022/01/03/%E5%90%8C%E6%AD%A5/","excerpt":"","text":"| 临界区 | 访问和操作共享数据的代码段 || 执行线程 | 正在执行的代码 || 竞争条件 | 多个执行线程在同一临界区中同时执行 || 同步 | 防止竞争条件|| 原子性 | 操作在执行结束前不可被打断，如同整个临界区命令是不可分割的指令一样 | 假定两笔交易同时发生，一者取100，一者取10，余额为105。105 &gt; 100，105 &gt; 10。两者同时发生，105-100=5，更新为5，同时105-10=95，更新为95，最终得到95。 锁机制线程占住锁，结束操作后再释放锁。 在同一时刻，只有一个线程持有锁，因此只有一个线程可以操作数据。一个线程在更新时，其它线程必须等待第一个线程释放锁。 要保护些什么不需要被保护的数据： 局部自动变量，独立存在于执行线程的栈中 如果数据只被特定的线程访问，那么也不需要加锁（因为线程一次只在一个处理器上执行） 要给数据加锁，而不是给代码加锁。","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://zzhxufeng.github.io/tags/Linux/"}]},{"title":"Android可执行文件构建过程","slug":"Android可执行文件构建过程","date":"2022-01-02T14:02:06.000Z","updated":"2022-01-02T15:12:22.883Z","comments":true,"path":"2022/01/02/Android可执行文件构建过程/","link":"","permalink":"https://zzhxufeng.github.io/2022/01/02/Android%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E6%9E%84%E5%BB%BA%E8%BF%87%E7%A8%8B/","excerpt":"","text":"在构建过程中，Android项目会被编译并打包进一个 .apk 文件。 .apk 文件实际上就是一个 .zip 压缩包。每个 .apk 文件包括一个 classes.dex 文件，这是Dalvik虚拟机的可执行文件。 .apk 中包括： .dex 文件：.class 文件转换成的Dalvik字节码 AndroidManifest.xml 文件会被编译成二进制版本 编译过的资源文件 resources.arsc 不经编译的资源文件 一个项目经过编译、打包、签名： 具体过程： 首先，Android Asset Packaging Tool(aapt) 工具将资源文件编译。资源文件包括 AndroidManifest.xml 以及其他的一些 XML 文件。这将生成一个 R.java 的类，然后我们可以通过 R 类从 Java 代码中引用资源文件。 aidl 工具将 .aidl 文件转换成 Java 接口。 将所有的 Java 代码通过 Java 编译器编译成 .class 文件。在这一步中编译 src 目录下的所有 Java 文件，生成的文件位于 bin/classes 目录下。 dex 工具将 .class 文件以及三方代码库转换成 Dalvik 二进制代码，生成一个 .dex 文件。将 Java 字节码转换成 Dalvik 字节码，压缩常量池、消除冗余信息。 所有那些没被编译的资源文件（比如图片）、被编译了的资源文件以及 .dex 文件都通过 apkbuilder 工具最后打包成一个 .apk 文件。.apk 文件在发布前还需要进行签名。debug也需要debug的签名。 最后还需要对签名后的 .apk 进行 align （对齐）处理。它的主要工作是使 apk 包中所有资源文件距离文件起始偏移4字节的整数倍，这样通过内存映射访问 apk 文件时速度会更快。 aapt 位于 android-sdk/platform-tools 目录下。该工具的源码在 frameworks/base/tools/aapt 目录下，生成过程的主要入口在 aapt 源码目录下的 Resource.cpp 的 buildResources() 函数。 aidl 工具在 android-sdk/platform-tools 目录下。工具源码在 frameworks/base/tools/aidl 目录。 签名工具有 JDK 提供的 jarsigner 工具，还有 Android 源码中提供的 signapk 工具，其代码位于 build/tools/signapk。 引用： Building and Running 《Android软件安全与逆向分析》","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"https://zzhxufeng.github.io/tags/Android/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-12-22T07:47:43.358Z","updated":"2021-12-22T07:47:43.358Z","comments":true,"path":"2021/12/22/hello-world/","link":"","permalink":"https://zzhxufeng.github.io/2021/12/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Tools","slug":"Tools","permalink":"https://zzhxufeng.github.io/tags/Tools/"},{"name":"AOSP","slug":"AOSP","permalink":"https://zzhxufeng.github.io/tags/AOSP/"},{"name":"JVM","slug":"JVM","permalink":"https://zzhxufeng.github.io/tags/JVM/"},{"name":"Linux","slug":"Linux","permalink":"https://zzhxufeng.github.io/tags/Linux/"},{"name":"Android","slug":"Android","permalink":"https://zzhxufeng.github.io/tags/Android/"}]}